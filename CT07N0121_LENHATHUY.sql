CREATE DATABASE ONTAP
USE ONTAP

-- Tạo bảng LOAISP
CREATE TABLE LOAISP (
    MALOAI VARCHAR(10) PRIMARY KEY,
    TENLOAI NVARCHAR(50) NOT NULL UNIQUE,
    DVT NVARCHAR(20)
);

-- Tạo bảng SANPHAM
CREATE TABLE SANPHAM (
    MASP VARCHAR(10) PRIMARY KEY,
    TENSP NVARCHAR(50) NOT NULL UNIQUE,
    MOTA NVARCHAR(MAX),
    GIA DECIMAL(18, 2) CHECK (GIA >= 100000),
    MALOAI VARCHAR(10),
    FOREIGN KEY (MALOAI) REFERENCES LOAISP(MALOAI)
);

-- Tạo bảng KHACHHANG
CREATE TABLE KHACHHANG (
    MAKH VARCHAR(10) PRIMARY KEY,
    TENKH NVARCHAR(50) NOT NULL,
    DIACHI NVARCHAR(100),
    DIENTHOAI VARCHAR(20)
);

-- Tạo bảng DONDH
CREATE TABLE DONDH (
    SODDH VARCHAR(10) PRIMARY KEY,
    NGAYDAT DATE NOT NULL,
    MAKH VARCHAR(10),
    FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH),
    DIENGIAI NVARCHAR(MAX)
);

-- Tạo bảng CTDDH
CREATE TABLE CTDDH (
    SODDH VARCHAR(10),
    MASP VARCHAR(10),
    SOLUONG INT CHECK (SOLUONG >= 0),
    PRIMARY KEY (SODDH, MASP),
    FOREIGN KEY (SODDH) REFERENCES DONDH(SODDH),
    FOREIGN KEY (MASP) REFERENCES SANPHAM(MASP)
);

-- LOAISP
INSERT INTO LOAISP (MALOAI, TENLOAI, DVT) VALUES
('L01', 'Tủ', 'Cái'),
('L02', 'Bàn', 'Cái'), 
('L03', 'Giường', 'Cái');

-- SANPHAM 
INSERT INTO SANPHAM (MASP, TENSP, MOTA, GIA, MALOAI) VALUES
('SP01', 'Tủ trang điểm', 'Cao 1.4m, rộng 2.2m', 1000000, 'L01'),
('SP02', 'Giường đơn', 'Rộng 1.4m', 1500000, 'L03'),
('SP03', 'Tủ DDA', 'Cao 1.6m, rộng 2.0m, cửa kiếng', 800000, 'L01'), 
('SP04', 'Bàn nhậu', '1m x 1.5m', 650000, 'L02'),
('SP05', 'Bàn uống trà', 'Tròn, 1.8m', 1100000, 'L02');

-- KHACHHANG
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DIENTHOAI) VALUES
('KH001', 'Trần Hải Cương', '731 Trần Hưng Đạo - Q1-Tp.HCM', '08-9776655'),
('KH002', 'Nguyễn Thị Bê', '638 Nguyễn Van Cừ - Q5- TpHCM', '0913-666123'),
('KH003', 'Trần Bảo Ngọc', '543 Lê Thị Lựu – Quảng Ngãi', '04-9238777');

-- DONDH
INSERT INTO DONDH (SODDH, NGAYDAT, MAKH, DIENGIAI) VALUES
('DH001', '2019-03-15', 'KH001', 'Mua các sản phẩm'),
('DH002', '2019-03-15', 'KH003', 'Cung cấp cho khách hàng'),
('DH003', '2019-03-16', 'KH001', 'Cung cấp cho khách hàng');

-- CTDDH
INSERT INTO CTDDH (SODDH, MASP, SOLUONG) VALUES
('DH001', 'SP01', 5),
('DH001', 'SP03', 1),
('DH002', 'SP02', 2),
('DH003', 'SP01', 2),
('DH003', 'SP04', 10), 
('DH003', 'SP05', 5);

--a) Tạo view V_A:
CREATE VIEW V_A AS
SELECT TOP 1 SP.MASP, SP.TENSP, L.TENLOAI, SUM(CT.SOLUONG) AS TONGSL
FROM SANPHAM SP
JOIN LOAISP L ON SP.MALOAI = L.MALOAI
JOIN CTDDH CT ON SP.MASP = CT.MASP
GROUP BY SP.MASP, SP.TENSP, L.TENLOAI
ORDER BY TONGSL DESC;


--b) Tạo Function F_B:
CREATE FUNCTION F_B (
    @SODDH VARCHAR(10),
    @NAM INT
)
RETURNS INT
AS
BEGIN
    DECLARE @SOSP INT;
    
    IF EXISTS (SELECT 1 FROM DONDH WHERE SODDH = @SODDH AND YEAR(NGAYDAT) = @NAM)
    BEGIN
        SELECT @SOSP = COUNT(DISTINCT MASP)
        FROM CTDDH
        WHERE SODDH = @SODDH;
    END
    ELSE
    BEGIN
        SET @SOSP = 0;
    END
    
    RETURN @SOSP;
END

--c) Tạo Procedure P_C:
CREATE PROCEDURE P_C
    @SODDH VARCHAR(10),
    @SOSP INT OUTPUT
AS
BEGIN
    SET @SOSP = dbo.F_B(@SODDH, 2019);
END

--d) Tạo Trigger Tg_D:
CREATE TRIGGER Tg_D
ON CTDDH
AFTER INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE SOLUONG <= 0)
    BEGIN
        RAISERROR('Số lượng sản phẩm phải lớn hơn 0', 16, 1);
        ROLLBACK TRANSACTION;
    END
END

--e) Tạo View V_E:
CREATE VIEW V_E AS
SELECT KH.MAKH, KH.TENKH, KH.DIACHI, COUNT(DH.SODDH) AS SOHDDAT
FROM KHACHHANG KH
LEFT JOIN DONDH DH ON KH.MAKH = DH.MAKH
GROUP BY KH.MAKH, KH.TENKH, KH.DIACHI;

--f) Tạo Procedure P_F:
CREATE PROCEDURE P_F
    @F INT
AS
BEGIN
    SELECT TOP(@F) SP.MASP, SP.TENSP, SUM(CT.SOLUONG) AS TONGSL
    FROM SANPHAM SP
    JOIN CTDDH CT ON SP.MASP = CT.MASP
    GROUP BY SP.MASP, SP.TENSP
    ORDER BY TONGSL DESC;
END

--g) Tạo Function F_G:
CREATE FUNCTION F_G (
    @MAHANG VARCHAR(10),
    @THANG INT = NULL,
    @NAM INT
)
RETURNS INT
AS
BEGIN
    DECLARE @TONGSL INT;
    
    IF @THANG IS NULL
    BEGIN
        SELECT @TONGSL = SUM(SOLUONG)
        FROM CTDDH CT
        JOIN DONDH DH ON CT.SODDH = DH.SODDH
        WHERE CT.MASP = @MAHANG AND YEAR(DH.NGAYDAT) = @NAM;
    END
    ELSE
    BEGIN
        SELECT @TONGSL = SUM(SOLUONG)
        FROM CTDDH CT
        JOIN DONDH DH ON CT.SODDH = DH.SODDH
        WHERE CT.MASP = @MAHANG AND MONTH(DH.NGAYDAT) = @THANG AND YEAR(DH.NGAYDAT) = @NAM;
    END
    
    RETURN ISNULL(@TONGSL, 0);
END

--h) Tạo Trigger Tg_H:
CREATE TRIGGER Tg_H
ON SANPHAM
AFTER INSERT, UPDATE
AS
BEGIN
    IF EXISTS (
        SELECT 1
        FROM inserted I
        JOIN SANPHAM SP ON I.TENSP = SP.TENSP
        WHERE SP.MASP <> I.MASP
    )
    BEGIN
        RAISERROR('Không được phép nhập hai sản phẩm có cùng tên', 16, 1);
        ROLLBACK TRANSACTION;
    END
END

--i) Tạo Trigger Tg_I:
CREATE TRIGGER Tg_I
ON CTDDH
AFTER INSERT, UPDATE
AS
BEGIN
    IF EXISTS (
        SELECT 1
        FROM inserted I
        JOIN DONDH DH ON I.SODDH = DH.SODDH
        GROUP BY DH.SODDH
        HAVING COUNT(DISTINCT MASP) > 5
    )
    BEGIN
        RAISERROR('Mỗi hóa đơn chỉ được phép đặt tối đa 5 sản phẩm', 16, 1);
        ROLLBACK TRANSACTION;
    END
END

--j) Tạo user và phân quyền:
-- Tạo user
CREATE USER Giamdoc FOR LOGIN Giamdoc;
CREATE USER Ketoan FOR LOGIN Ketoan;
CREATE USER Nhanvien FOR LOGIN Nhanvien;

-- Phân quyền
GRANT ALL PRIVILEGES ON DATABASE::[ONTAP] TO Giamdoc;

GRANT SELECT ON SANPHAM TO Ketoan;
GRANT ALL PRIVILEGES ON DATABASE::[ONTAP] TO Ketoan EXCEPT SELECT ON SANPHAM;

DENY SELECT, INSERT, UPDATE, DELETE ON KHACHHANG, SANPHAM, LOAISP TO Nhanvien;
GRANT SELECT ON DATABASE::[ONTAP] TO Nhanvien;



--k) Tạo Transaction Tr_K:
CREATE PROCEDURE Tr_K
    @MASP VARCHAR(10),
    @TENSP NVARCHAR(50),
    @MOTA NVARCHAR(MAX),
    @GIA DECIMAL(18, 2),
    @MALOAI VARCHAR(10)
AS
BEGIN
    BEGIN TRANSACTION;
    
    IF EXISTS (SELECT 1 FROM LOAISP WHERE MALOAI = @MALOAI)
    BEGIN
        INSERT INTO SANPHAM (MASP, TENSP, MOTA, GIA, MALOAI)
        VALUES (@MASP, @TENSP, @MOTA, @GIA, @MALOAI);
    END
    ELSE
    BEGIN
        RAISERROR('Loại sản phẩm không tồn tại', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
    
    COMMIT TRANSACTION;
END
